/*
=============================================================
Create Database and Tables
=============================================================
Script Purpose:
    This script creates a new database named 'Elist_tech_cleaned' after checking if it already exists. 
    If the database exists, it is dropped and recreated. Additionally, the script sets up four tables 
    within the database: 'orders' , 'costumers', 'order_status', and 'geo_lookup'.
	
WARNING:
    Running this script will drop the entire 'Elist_tech_cleaned' database if it exists. 
    All data in the database will be permanently deleted. Proceed with caution 
    and ensure you have proper backups before running this script.
*/

USE master;
GO
IF EXISTS (SELECT 1 FROM sys.databases WHERE name = 'Elist_tech_cleaned')
BEGIN
		ALTER DATABASE Elist_tech_cleaned SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
		DROP DATABASE Elist_tech_cleaned;
END;

GO

CREATE DATABASE Elist_tech_cleaned;

GO

USE Elist_tech_cleaned;

GO

IF OBJECT_ID('Elist_tech_cleaned.dbo.customers', 'U') IS NOT NULL
    DROP TABLE Elist_tech_cleaned.dbo.customers;

GO

CREATE TABLE Elist_tech_cleaned.dbo.customers(
	customer_id			nvarchar(50),
	marketing_channel		nvarchar(50),
	account_creation_method nvarchar(50),
	country_code			nvarchar(50),
	loyalty_program			bit,
	created_on			date
);

GO

IF OBJECT_ID('Elist_tech_cleaned.dbo.geo_lookup', 'U') IS NOT NULL
    DROP TABLE Elist_tech_cleaned.dbo.geo_lookup;

GO

CREATE TABLE Elist_tech_cleaned.dbo.geo_lookup(
	country					nvarchar(50),
	region					nvarchar(50)
);

GO

IF OBJECT_ID('Elist_tech_cleaned.dbo.orders', 'U') IS NOT NULL
    DROP TABLE Elist_tech_cleaned.dbo.orders;

GO

CREATE TABLE Elist_tech_cleaned.dbo.orders(
	customer_id				nvarchar(50),
	id					nvarchar(50),
	purchase_ts				date,
	product_id				nvarchar(50),
	product_name			        nvarchar(50),
	currency				nvarchar(50),
	local_price				float,
	usd_price				float,
	purchase_platform		        nvarchar(50)
);

GO

IF OBJECT_ID('Elist_tech_cleaned.dbo.order_status', 'U') IS NOT NULL
    DROP TABLE Elist_tech_cleaned.dbo.order_status;

GO

CREATE TABLE Elist_tech_cleaned.dbo.order_status(
	order_id			nvarchar(50),
	purchase_ts			date,
	ship_ts				date,
	delivery_ts			date,
	refund_ts			date
);

GO

INSERT INTO Elist_tech_cleaned.dbo.orders (
	customer_id,
	id,
	purchase_ts,
	product_id,
	product_name,
	currency,
	local_price,
	usd_price,
	purchase_platform
)
SELECT 
customer_id,
id,
purchase_ts,
product_id,
TRIM(LOWER(REPLACE(product_name, '""',''))) AS product_name,
CASE WHEN currency IS NULL THEN 'unknown'
	 ELSE currency
END AS currency,
CASE WHEN local_price IS NULL THEN 0
	 ELSE ROUND(local_price, 2) 
END AS local_price,
CASE WHEN usd_price IS NULL THEN 0
	 ELSE ROUND(usd_price, 2) 
END AS usd_price,
purchase_platform
FROM (
	SELECT 
	*,
	ROW_NUMBER() OVER (PARTITION BY customer_id, id, purchase_ts, product_id, product_name, currency, local_price, usd_price, purchase_platform ORDER BY(SELECT NULL)) AS rn
	FROM Project_Elits.dbo.order_info
	WHERE id IS NOT NULL
)t	WHERE rn = 1

GO

INSERT INTO Elist_tech_cleaned.dbo.order_status(
	order_id,
	purchase_ts,
	ship_ts,
	delivery_ts,
	refund_ts
)
SELECT
order_id,
purchase_ts,
ship_ts,
delivery_ts,
refund_ts
FROM (
	SELECT 
	*,
	ROW_NUMBER() OVER (PARTITION BY order_id, purchase_ts, ship_ts, delivery_ts ORDER BY (SELECT NULL)) AS rn
	FROM Project_Elits.dbo.order_status
)t WHERE rn = 1

GO

INSERT INTO Elist_tech_cleaned.dbo.geo_lookup(
	country,
	region
)
SELECT
CASE WHEN country = 'A1' THEN 'unknown'
	 WHEN country IS NULL THEN 'unknown'
	 ELSE country
END AS country,
ISNULL(region, 'unknown') AS region
FROM Project_Elits.dbo.geo_lookup

GO

INSERT INTO Elist_tech_cleaned.dbo.customers(
	customer_id,
	marketing_channel,
	account_creation_method,
	country_code,
	loyalty_program,
	created_on
)
SELECT
customer_id,
ISNULL(marketing_channel, 'unknown') AS marketing_channel_updated,
ISNULL(account_creation_method, 'unknown') AS account_creation_method,
CASE WHEN country_code = 'A1' THEN 'unknown'
	 WHEN country_code IS NULL THEN 'unknown'
	 ELSE country_code
END AS country_code,
loyalty_program,
created_on
FROM(
SELECT 
	*,
	ROW_NUMBER() OVER (PARTITION BY customer_id ORDER BY created_on DESC ) AS flag_last
	FROM Project_Elits.dbo.customer_info
	WHERE customer_id IS NOT NULL
)t  WHERE flag_last = 1 
